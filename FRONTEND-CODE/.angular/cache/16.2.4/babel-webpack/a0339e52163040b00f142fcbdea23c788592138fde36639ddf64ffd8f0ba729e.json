{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let AjoutComponent = class AjoutComponent {\n  constructor() {\n    this.utilisateur = {\n      nom: '',\n      prenom: '',\n      email: '',\n      phoneNumber: '',\n      age: '',\n      cin: '',\n      maladies: [],\n      tension: ''\n    };\n    this.isInvalid = false; // Variable pour vérifier la validation au focus\n    this.maladies = [{\n      id: 1,\n      nom: 'hypertension artérielle'\n    }, {\n      id: 2,\n      nom: 'Insuffisance cardiaque'\n    }];\n    this.maladiesList = ['Hypertension', 'Insuffisance cardiaque'];\n    this.message = '';\n    this.showCard = false;\n  }\n  onFocus() {\n    this.isInvalid = true; // Activer la validation au focus\n  }\n\n  onBlur() {\n    this.isInvalid = false; // Désactiver la validation au blur\n  }\n\n  onCheckChange(event, maladieId) {\n    if (event.target.checked) {\n      this.utilisateur.maladies.push();\n    } else {\n      this.utilisateur.maladies = this.utilisateur.maladies.filter(maladie => maladie !== maladieId);\n    }\n  }\n  ajouterUtilisateur() {\n    console.log(this.utilisateur);\n  }\n  onSubmit(utilisateurForm) {\n    console.log(utilisateurForm);\n  }\n  displayMessage() {\n    this.message = 'Votre demande est ajoutée';\n  }\n  toggleCard() {\n    this.showCard = !this.showCard;\n  }\n};\nAjoutComponent = __decorate([Component({\n  selector: 'app-ajout',\n  templateUrl: './ajout.component.html',\n  styleUrls: ['./ajout.component.css']\n})], AjoutComponent);","map":{"version":3,"names":["Component","AjoutComponent","constructor","utilisateur","nom","prenom","email","phoneNumber","age","cin","maladies","tension","isInvalid","id","maladiesList","message","showCard","onFocus","onBlur","onCheckChange","event","maladieId","target","checked","push","filter","maladie","ajouterUtilisateur","console","log","onSubmit","utilisateurForm","displayMessage","toggleCard","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\lenovo\\Desktop\\PROJECTS\\EMBS_FINALE\\src\\app\\ajout\\ajout.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { NgIf } from '@angular/common';\nimport { NgModel } from '@angular/forms';\n@Component({\n  selector: 'app-ajout',\n  templateUrl: './ajout.component.html',\n  styleUrls: ['./ajout.component.css']\n  \n})\nexport class AjoutComponent {\n  utilisateur = {\n    nom: '',\n    prenom: '',\n    email: '',\n    phoneNumber: '',\n    age:'',\n    cin: '',\n    maladies: [],\n    tension: ''\n };\n isInvalid: boolean = false; // Variable pour vérifier la validation au focus\n\n  onFocus() {\n    this.isInvalid = true; // Activer la validation au focus\n  }\n\n  onBlur() {\n    this.isInvalid = false; // Désactiver la validation au blur\n  }\n maladies = [\n    {id: 1, nom: 'hypertension artérielle'},\n    {id: 2, nom: 'Insuffisance cardiaque'},\n   \n\n ];\n onCheckChange(event: any, maladieId: number) {\n  if (event.target.checked) {\n      this.utilisateur.maladies.push();\n  } else {\n      this.utilisateur.maladies = this.utilisateur.maladies.filter(maladie => maladie !== maladieId);\n  }\n}\n ajouterUtilisateur() {\n    console.log(this.utilisateur);\n }\n\n maladiesList = ['Hypertension', 'Insuffisance cardiaque'];\n\n onSubmit(utilisateurForm: NgForm) {\n   console.log(utilisateurForm)\n }\n message: string = ''; \n\n displayMessage(): void {\n   this.message = 'Votre demande est ajoutée';\n }\n showCard: boolean = false;\n\n\n toggleCard() {\n   this.showCard = !this.showCard;\n }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAUlC,WAAMC,cAAc,GAApB,MAAMA,cAAc;EAApBC,YAAA;IACL,KAAAC,WAAW,GAAG;MACZC,GAAG,EAAE,EAAE;MACPC,MAAM,EAAE,EAAE;MACVC,KAAK,EAAE,EAAE;MACTC,WAAW,EAAE,EAAE;MACfC,GAAG,EAAC,EAAE;MACNC,GAAG,EAAE,EAAE;MACPC,QAAQ,EAAE,EAAE;MACZC,OAAO,EAAE;KACX;IACD,KAAAC,SAAS,GAAY,KAAK,CAAC,CAAC;IAS5B,KAAAF,QAAQ,GAAG,CACR;MAACG,EAAE,EAAE,CAAC;MAAET,GAAG,EAAE;IAAyB,CAAC,EACvC;MAACS,EAAE,EAAE,CAAC;MAAET,GAAG,EAAE;IAAwB,CAAC,CAGxC;IAYD,KAAAU,YAAY,GAAG,CAAC,cAAc,EAAE,wBAAwB,CAAC;IAKzD,KAAAC,OAAO,GAAW,EAAE;IAKpB,KAAAC,QAAQ,GAAY,KAAK;EAM1B;EAxCEC,OAAOA,CAAA;IACL,IAAI,CAACL,SAAS,GAAG,IAAI,CAAC,CAAC;EACzB;;EAEAM,MAAMA,CAAA;IACJ,IAAI,CAACN,SAAS,GAAG,KAAK,CAAC,CAAC;EAC1B;;EAODO,aAAaA,CAACC,KAAU,EAAEC,SAAiB;IAC1C,IAAID,KAAK,CAACE,MAAM,CAACC,OAAO,EAAE;MACtB,IAAI,CAACpB,WAAW,CAACO,QAAQ,CAACc,IAAI,EAAE;KACnC,MAAM;MACH,IAAI,CAACrB,WAAW,CAACO,QAAQ,GAAG,IAAI,CAACP,WAAW,CAACO,QAAQ,CAACe,MAAM,CAACC,OAAO,IAAIA,OAAO,KAAKL,SAAS,CAAC;;EAEpG;EACCM,kBAAkBA,CAAA;IACfC,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC1B,WAAW,CAAC;EAChC;EAIA2B,QAAQA,CAACC,eAAuB;IAC9BH,OAAO,CAACC,GAAG,CAACE,eAAe,CAAC;EAC9B;EAGAC,cAAcA,CAAA;IACZ,IAAI,CAACjB,OAAO,GAAG,2BAA2B;EAC5C;EAIAkB,UAAUA,CAAA;IACR,IAAI,CAACjB,QAAQ,GAAG,CAAC,IAAI,CAACA,QAAQ;EAChC;CACA;AArDYf,cAAc,GAAAiC,UAAA,EAN1BlC,SAAS,CAAC;EACTmC,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CAEpC,CAAC,C,EACWpC,cAAc,CAqD1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}