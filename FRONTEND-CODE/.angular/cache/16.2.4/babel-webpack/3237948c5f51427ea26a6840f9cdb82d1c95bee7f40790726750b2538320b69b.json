{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nexport let IndexComponent = class IndexComponent {\n  constructor(formbuilder, http) {\n    this.formbuilder = formbuilder;\n    this.http = http;\n    this.i = 0;\n    this.authFullName = \"\";\n    this.searchTerm = '';\n    this.users = [{\n      id: 1,\n      name: 'Mouna KETATA',\n      DH: '02/02/2020',\n      genre: 'Female',\n      age: '20',\n      PA: '110',\n      FC: '90%',\n      Ox: '70BPM'\n    }, {\n      id: 2,\n      name: 'xxx',\n      DH: '02/02/1995',\n      genre: 'Male',\n      age: '50',\n      PA: '110',\n      FC: '88%',\n      Ox: '75BPM'\n    }, {\n      id: 3,\n      name: 'yyy',\n      DH: '31/07/1985',\n      genre: 'Female',\n      age: '52',\n      PA: '100',\n      FC: '97%',\n      Ox: '90BPM'\n    }, {\n      id: 4,\n      name: 'Dzzz',\n      DH: '08/12/1952',\n      genre: 'Male',\n      age: '38',\n      PA: '130',\n      FC: '75%',\n      Ox: '70BPM'\n    }, {\n      id: 5,\n      name: 'ffff',\n      DH: '19/12/1933',\n      genre: 'Female',\n      age: '44',\n      PA: '120',\n      FC: '98%',\n      Ox: '76BPM'\n    }];\n    this.doctor = [{\n      id: 1,\n      name: 'DR.Kammoun'\n    }];\n    this.myForm = this.formbuilder.group({\n      nom: ['', [Validators.required]],\n      DN: ['', [Validators.required]],\n      genre: ['', [Validators.required]],\n      age: ['', [Validators.required]],\n      PA: ['', [Validators.required]],\n      FC: ['', [Validators.required]],\n      Ox: ['', [Validators.required]],\n      items: this.formbuilder.array([this.formbuilder.group({\n        nom: [\"\"],\n        DN: [\"\"],\n        PA: [\"\"],\n        FC: [\"\"],\n        Ox: [\"\"]\n      })])\n    });\n  }\n  ngOnInit() {\n    var data = localStorage.getItem('auth');\n    if (data) {\n      var auth = JSON.parse(data);\n      this.authFullName = auth.firstName + \" \" + auth.lastName;\n    }\n    ;\n    this.getPatientHistories(0, 12);\n  }\n  onSearch() {\n    console.log('Recherche en cours...');\n  }\n  get filteredUsers() {\n    return this.users.filter(user => user.name.toLowerCase().startsWith(this.searchTerm.toLowerCase()));\n  }\n  get items() {\n    return this.myForm.get('items');\n  }\n  delete(i) {\n    this.items.removeAt(i);\n  }\n  effacerLigne(index) {\n    this.users.splice(index, 1);\n  }\n  getPatientHistories(page, size) {\n    this.http.get('https://a9ad-196-203-24-105.ngrok-free.app/api/patient/all/' + page + '/size/' + size).subscribe(data => {\n      if (data) {\n        data.forEach(element => {\n          element.name = element.patient.firstName + \" \" + element.patient.lastName;\n          if (element.state == 0) {\n            element;\n          }\n        });\n        this.history = data;\n      }\n    });\n  }\n};\nIndexComponent = __decorate([Component({\n  selector: 'app-index',\n  templateUrl: './index.component.html',\n  styleUrls: ['./index.component.css']\n})], IndexComponent);","map":{"version":3,"names":["Component","Validators","IndexComponent","constructor","formbuilder","http","i","authFullName","searchTerm","users","id","name","DH","genre","age","PA","FC","Ox","doctor","myForm","group","nom","required","DN","items","array","ngOnInit","data","localStorage","getItem","auth","JSON","parse","firstName","lastName","getPatientHistories","onSearch","console","log","filteredUsers","filter","user","toLowerCase","startsWith","get","delete","removeAt","effacerLigne","index","splice","page","size","subscribe","forEach","element","patient","state","history","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\lenovo\\Desktop\\PROJECTS\\EMBS_FINALE\\src\\app\\index\\index.component.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, Validators } from '@angular/forms';\n@Component({\n  selector: 'app-index',\n  templateUrl: './index.component.html',\n  styleUrls: ['./index.component.css']\n})\nexport class IndexComponent {\n  myForm:any;\n  i: number = 0;\n  authFullName =\"\";\n  history : any;\n\n\n\n  constructor( private formbuilder:FormBuilder,private http :HttpClient) { \n    this.myForm=this.formbuilder.group({\n      nom:['',[Validators.required]],\n      DN:['',[Validators.required]],\n      genre:['',[Validators.required]],\n      age:['',[Validators.required]],\n      PA:['',[Validators.required]],\n      FC:['',[Validators.required]],\n      Ox:['',[Validators.required]],\n      items:this.formbuilder.array([\n        this.formbuilder.group({\n          nom:[\"\"],\n          DN:[\"\"],\n          PA:[\"\"],\n          FC:[\"\"],\n          Ox:[\"\"],\n        })\n      ])\n    })\n    \n  }\n\n ngOnInit(): void {\n  var data =localStorage.getItem('auth') ;\n     if(data) {\n      var auth = JSON.parse(data)\n      this.authFullName=auth.firstName +\" \" +auth.lastName \n     };\n  this.getPatientHistories(0,12)\n\n }\n\n onSearch() {\n    console.log('Recherche en cours...');\n }\n  searchTerm = '';\n\n  users = [\n     { id: 1, name: 'Mouna KETATA',DH:'02/02/2020',genre:'Female',age:'20',PA:'110',FC:'90%',Ox:'70BPM' },\n     { id: 2, name: 'xxx',DH:'02/02/1995',genre:'Male',age:'50',PA:'110',FC:'88%',Ox:'75BPM' },\n     { id: 3, name: 'yyy',DH:'31/07/1985',genre:'Female',age:'52',PA:'100',FC:'97%',Ox:'90BPM' },\n     { id: 4, name: 'Dzzz',DH:'08/12/1952',genre:'Male',age:'38',PA:'130',FC:'75%',Ox:'70BPM' },\n     { id: 5, name: 'ffff',DH:'19/12/1933' ,genre:'Female',age:'44',PA:'120',FC:'98%',Ox:'76BPM'},\n    \n  ];\n  doctor=[\n    {id:1, name:'DR.Kammoun'},\n  ]\n \n  get filteredUsers() {\n     return this.users.filter(user =>\n       user.name.toLowerCase().startsWith(this.searchTerm.toLowerCase())\n     );\n  }\n  get items(){\n    return this.myForm.get('items') as FormArray; \n  }\n  delete(i:any){\nthis.items.removeAt(i)\n  }\n  effacerLigne(index: number) {\n    this.users.splice(index, 1);\n  }\n\n  getPatientHistories(page : number,size : number){\n    this.http.get<any[]>('https://a9ad-196-203-24-105.ngrok-free.app/api/patient/all/'+page+'/size/'+size).subscribe(data => {  \n    if(data){\n      data.forEach(element => {\n        element.name =  element.patient.firstName + \" \" + element.patient.lastName  \n        if(element.state==0){\n          element\n        } \n  });\n  this.history=data;\n    }\n  });}\n\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}