{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let ReadComponent = class ReadComponent {\n  constructor(activated, http) {\n    this.activated = activated;\n    this.http = http;\n    this.userId = null;\n    this.profile = null;\n    this.histories = [];\n    this.options = [{\n      value: 'option1',\n      label: 'Option 1'\n    }, {\n      value: 'option2',\n      label: 'Option 2'\n    }\n    // Ajoutez d'autres options selon vos besoins\n    ];\n\n    this.selectedOptions = [];\n    this.utilisateur = {\n      nom: '',\n      prenom: '',\n      tension: '',\n      fréquenceC: '',\n      maladies: []\n    };\n    this.Data = [{\n      id: 1,\n      name: 'Mouna KETATA',\n      PA: '110',\n      FC: '90%',\n      Ox: '70BPM'\n    }, {\n      id: 2,\n      name: 'Bob',\n      PA: '110',\n      FC: '88%',\n      Ox: '75BPM'\n    }, {\n      id: 3,\n      name: 'Carol',\n      PA: '100',\n      FC: '97%',\n      Ox: '90BPM'\n    }, {\n      id: 4,\n      name: 'David',\n      PA: '130',\n      FC: '75%',\n      Ox: '70BPM'\n    }, {\n      id: 5,\n      name: 'Eve',\n      PA: '120',\n      FC: '98%',\n      Ox: '76BPM'\n    }];\n    this.message = '';\n    this.activated.paramMap.subscribe(params => {\n      // Get the user ID from route parameters\n      if (params.get('id')) {\n        this.userId = this.activated.snapshot.paramMap.get('id');\n      }\n      console.log('User ID:', this.userId);\n    });\n  }\n  ngOnInit() {\n    this.http.get('https://3df5-197-4-140-247.ngrok-free.app/api/patient/profile/' + this.userId).subscribe(data => {\n      log;\n      this.profile = data;\n    });\n    this.http.get('https://3df5-197-4-140-247.ngrok-free.app/api/patient/history/' + this.userId).subscribe(data => {\n      console.log(data);\n      data.forEach(element => {\n        if (element.state == 0) {\n          element.state = \"colorG\";\n        } else if (element.state == 1) {\n          element.state = \"colorY\";\n        } else {\n          element.state = \"colorR\";\n        }\n      });\n      this.histories = data;\n    });\n  }\n  onSubmit(form) {\n    if (form.valid) {\n      console.log('Détails de l\\'utilisateur:', this.utilisateur);\n      form.reset();\n    }\n  }\n  displayMessage() {\n    this.message = 'Votre demande est ajoutée';\n  }\n};\nReadComponent = __decorate([Component({\n  selector: 'app-read',\n  templateUrl: './read.component.html',\n  styleUrls: ['./read.component.css']\n})], ReadComponent);","map":{"version":3,"names":["Component","ReadComponent","constructor","activated","http","userId","profile","histories","options","value","label","selectedOptions","utilisateur","nom","prenom","tension","fréquenceC","maladies","Data","id","name","PA","FC","Ox","message","paramMap","subscribe","params","get","snapshot","console","log","ngOnInit","data","forEach","element","state","onSubmit","form","valid","reset","displayMessage","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\lenovo\\Desktop\\PROJECTS\\EMBS_FINALE\\src\\app\\read\\read.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { NgIf } from '@angular/common';\nimport { NgModel } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n@Component({\n  selector: 'app-read',\n  templateUrl: './read.component.html',\n  styleUrls: ['./read.component.css']\n})\nexport class ReadComponent {\n\n  userId: string | null = null;\n  profile : any=null;\n  histories :any=[];\n\n  constructor(private activated :ActivatedRoute,private http :HttpClient){\n    this.activated.paramMap.subscribe(params => {\n      // Get the user ID from route parameters\n      if(params.get('id')){\n        this.userId = this.activated.snapshot.paramMap.get('id');\n      }\n    \n      console.log('User ID:', this.userId);\n    });\n  }\n\n  ngOnInit(): void {\n    this.http.get<any[]>('https://3df5-197-4-140-247.ngrok-free.app/api/patient/profile/'+this.userId).subscribe(data => {\n      log\n      this.profile=data;\n    } ); \n      this.http.get<any[]>('https://3df5-197-4-140-247.ngrok-free.app/api/patient/history/'+this.userId).subscribe(data => {\n        console.log(data);\n        data.forEach(element =>{\n          \n            if(element.state==0){\n              element.state=\"colorG\"\n            } \n    \n            else if(element.state==1){\n              element.state=\"colorY\"\n            } \n            else {\n              element.state=\"colorR\"\n            }\n      });\n         this.histories=data;\n      \n      });  \n\n  \n   }\n\n  options = [\n    { value: 'option1', label: 'Option 1' },\n    { value: 'option2', label: 'Option 2' },\n    // Ajoutez d'autres options selon vos besoins\n  ];\n\n  selectedOptions: string[] = [];\n  utilisateur = {\n    nom: '',\n    prenom: '',\n    tension: '',\n    fréquenceC:'',\n    maladies: []\n };\n \n Data = [\n  { id: 1, name: 'Mouna KETATA',PA:'110',FC:'90%',Ox:'70BPM' },\n  { id: 2, name: 'Bob',PA:'110',FC:'88%',Ox:'75BPM' },\n  { id: 3, name: 'Carol',PA:'100',FC:'97%',Ox:'90BPM' },\n  { id: 4, name: 'David',PA:'130',FC:'75%',Ox:'70BPM' },\n  { id: 5, name: 'Eve',PA:'120',FC:'98%',Ox:'76BPM'},\n \n];\n\n onSubmit(form: NgForm) {\n    if (form.valid) {\n      console.log('Détails de l\\'utilisateur:', this.utilisateur);\n      form.reset();\n    }\n }\n message: string = ''; \n\n displayMessage(): void {\n   this.message = 'Votre demande est ajoutée';\n }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}